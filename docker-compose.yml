services:
  web:
    image: ostis/sc-web:0.8.0-Fusion
    container_name: geometry-web${NAME_SUFFIX:-}
    build:
      context: ./sc-web
    restart: unless-stopped
    ports:
      - "${SC_WEB_PORT:-8000}:8000"
    networks:
      - geometry
    command:
      - "--public-url=${PUBLIC_SC_URL:-ws://localhost:8090/ws_json}"
      - "--server-host=machine"
      - "--server-port=8090"
    depends_on:
      machine:
        condition: service_healthy

  machine:
    image: ostis/sc-machine:0.8.0-Fusion
    container_name: geometry-problem-solver${NAME_SUFFIX:-}
    build:
      context: ./sc-machine
    restart: unless-stopped
    volumes:
      - ./:/kb
      - kb-binary:/kb.bin
    networks:
      - geometry
    ports:
      - "${PROBLEM_SOLVER_PORT:-8090}:8090"
    healthcheck:
      test: "python3 /sc-machine/scripts/healthcheck.py"
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 120s
    environment:
      # Use the commented env variable if you need to rebuild KB every startup.
      #- "REBUILD_KB=1"
      - "KB_PATH=/kb/repo.path"
      - "BINARY_PATH=/sc-machine/bin"
      - "CONFIG_PATH=/kb/ostis-web-platform.ini"
    command:
      - "serve"

volumes:
  kb-binary:
    name: geometry-kb${NAME_SUFFIX:-}
    driver: local

networks:
  geometry:
    name: geometry${NAME_SUFFIX:-}
    driver: bridge
