Question_Combo_Task -> rrel_1: Condition_Graph1;;
Question_Combo_Task -> rrel_2: OR_Len;;
Question_Combo_Task <- question; sc_node_struct;;

Condition_Graph1 = [* concept_circle -> Circle_OR;;
				  concept_square -> Square_ORCD;;
				  concept_segment -> Segment_OR;;
				  value -> OR_Len; Sqr_Area; Seg_OR_Len;;
				  number -> n_16;;
				  Circle_OR => nrel_length: OR_Len;;
				  Segment_OR => nrel_length: Seg_OR_Len;;
				  Circle_OR => nrel_radius: Segment_OR;;
				  Square_ORCD => nrel_area: Sqr_Area;;
				  Square_ORCD => nrel_side: Segment_OR;;
				  Sqr_Area <= nrel_value: ... (* -> rrel_sq_sm: n_16;; *);;
				 *];;

sc_statement_for_solver -> stat_square_area; stat_circle_length;;

concept_square <- rrel_key_sc_element: stat_square_area;;

stat_square_area -> rrel_main_key_sc_element: stat_square_area_formal;;

stat_square_area_formal <- nrel_implication;;

stat_square_area_formal -> rrel_if: stat_square_area_if;;

stat_square_area_formal -> rrel_then: stat_square_area_then;;

stat_square_area_if = [* concept_square _-> _sqr1;; *];;

stat_square_area_then = [* _sqr1 _=> nrel_area:: _Sqr_Area;;
					 _sqr1 _=> nrel_side:: _Segm1;;
					 concept_segment _-> _Segm1;;
					 value _-> _Sqr_Area; _Slen1;;
					 _Segm1 _=> nrel_length:: _Slen1;;
					 _Sqr_Area _<= nrel_pow_of_quantities:: _con1;;
					 _con1 _-> rrel_exponent_of_power:: n_2;;
					 _con1 _-> rrel_base_of_power:: _Slen1;; *];;

concept_circle <- rrel_key_sc_element: stat_circle_length;;

stat_circle_length -> rrel_main_key_sc_element: stat_circle_length_formal;;

stat_circle_length_formal <- nrel_implication;;

stat_circle_length_formal -> rrel_if: stat_circle_length_if;;

stat_circle_length_formal -> rrel_then: stat_circle_length_then;;

stat_circle_length_if = [* concept_circle _-> _crcl1;; *];;

stat_circle_length_then = [* _crcl1 _=> nrel_radius:: _rd1;;
					 _rd1 _=> nrel_length:: _rd_len1;;
					 _crcl1 _=> nrel_length:: _crcl_len1;;
					 concept_segment _-> _rd1;;
					 value _-> _rd_len1; _crcl_len1; _sq_rd_len1;;
					 _crcl_len1 _<= nrel_composition_of_quantities:: _tup2;;
					 _tup2 _-> n_pi; n_2; _rd_len1;;
					 *];;

atomic_existence -> stat_circle_length_if; stat_circle_length_then; stat_square_area_if; stat_square_area_then;;

number -> n_2;;

n_16 => nrel_idtf: [16]
	(* <- decimal_numeral_system;; *);;

n_pi => nrel_idtf: [3,14]
	(* <- decimal_numeral_system;; *);;